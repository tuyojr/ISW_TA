Why Java?

It enables users develop and deploy applications on the internet for servers,
desktops computers, and small hand-held devices.

- It is a general purpose language.
- It is an internet programming language.
- It is high level language.
- It is an object oriented language.
- It is an interpreted language.
- It is a platform independent language. This means that it can run on any operating 
    system with any machine architecture. It is called a platform because it has two
    components: the Java Virtual Machine (JVM) and the Java Application Programming
    Interface (API). The JVM is the interpreter that runs the Java program. The API
    is a large collection of ready-made software components that provide many useful
    capabilities, such as graphical user interface (GUI) widgets. Java Runtime Environment
    (JRE) is a software package that contains what is needed to run a Java program. It
    includes the JVM, the API, and other supporting code. The JRE is part of the Java
    Development Kit (JDK). The JDK is a software package that contains what is needed
    to develop Java programs. It includes the JRE, an interpreter/loader (Java), a compiler
    (javac), an archiver (jar), a documentation generator (javadoc), and other tools needed
    in Java development.
- It was developedd by Sun Microsystems (now a subsidiary of Oracle) in 1995.
- James Gosling is known as the father of Java. It was named "Oak" before Java.
- JRE is only meant for running your application.
- JDK is for development purpose which also includes JRE.
- Components of JDK: JRE, JVM, Java compiler, Java archiver, Java documentation generator.
- JRE is the component of the JDK that allows you to run Java programs.
- JVM is the component of the JDK that interprets the compiled Java bytecodes and executes
    them as actions or operating system calls on the host operating system.
- Java compiler is the component of the JDK that translates Java source code into Java bytecodes
    and stores them in files.
- Java archiver is the component of the JDK that packages a set of Java bytecodes into a single
    file.
- Java documentation generator is the component of the JDK that generates documentation from
    Java source code.

- The garbage collector is a part of the JVM. It is responsible for freeing up memory by removing
    objects that are no longer referenced by any part of the program.
- Objects can be unreferenced in two(or 3) ways:
    1. The object's reference variable is assigned null. e.g. Employee e = new Employee(); | e = null;
    2. The object's reference variable is assigned another object. e.g. Employee e1 = new Employee(); | 
        Employee e2 = new Employee(); | e1 = e2;
    3. By anonymous object. e.g. new Employee();
- In Java every object is a child of the class Object. This means that every object inherits the
    methods of the class Object. The methods of the class Object are called the object's inherited
    methods. The inherited methods are: clone(), equals(), finalize(), getClass(), hashCode(),
    notify(), notifyAll(), toString(), wait().

- Java is not dynamically typed.
- In Java: 
    1. all keywords are in lowercases e.g. class, void, public etc.
    2. all classes start with uppercase e.g. String, System, UserClassName, etc.
    3. methods and variables are in camelCase e.g. main(), print(), println(), etc.
    4. variables and objects are similar to keywords in the sense that they are in lower case.
        e.g. out (object), args (variable)
    5. tokens: "{}" are used to define blocks of code. "()" are used to define parameters. "." is used to
        access methods and variables. ";" is used to end a statement. "," is used to separate
        parameters and variables. """" is used to define strings. "//" is used to define comments.
    6. we have a constant variable or a constant string e.g. "Hello World"
    7. reserved words are words that are used in the program logic keywords are part of the syntax of the language.

- void means that the method does not return any value and the compiler will not check for any return value.
- String args[] means that the main method accepts an array of strings as arguments.
- out is a static object of the class System. It is used to access the standard output stream.
- println means print line. It is used to print a string and then terminate the line.
- a starting class must have one main method.
- Java is case sensitive.
- All class names should start with uppercase. Every first letter of each new word should be uppercase.
    e.g. Employee, EmployeeDetails, etc.
- Method names should start with lowercase. Every first letter of each new word should be uppercase.
    e. g. myMethod(), myMethodName(), etc.
- Program file name should match the class name. e.g. Employee.java, EmployeeDetails.java, etc.
- Names used for classes, variables, and methods are called IDENTIFIERS.
- All identifiers should start with a letter, underscore, or a dollar sign.
- keywords cannot be used as identifiers.
- Identifiers are case sensitive.
- MODIFIERS are keywords that you add to those definitions to change their meanings.
- Java has two categories of modifiers: access modifiers and non-access modifiers.
    1. Access Modifiers: default, public, protected, private
    2. Non-Access Modifiers: final abstract, strictfp
- A package is a collection of related classes and interfaces stored in the same directory/folder.
- Any class within a folder can access the class with "default" access modifier.
- "Protected" access modifier is used to give access to the class within the same package and
    to the class that is a subclass of this class. Access to the child class.
- "Public" access modifier is used to give access to the class within the same package and
    to the class that is a subclass of this class.
- "Private" access modifier is used to give access to the class within the same package.

- Enums restrict a variable to have one of only a few predefined values. The values in this
    enumerated list are called enums.

- There are two groups of data types in Java: primitive data types and reference/object data types.
- Primitive data types are predefined by the language and named by a keyword. They are not objects.
    They are basic data types and they can be used directly by the compiler e.g. int, char, boolean,
    byte, short, long, float, double, etc.
- Reference/Object data types are created by the programmer and is a reference to an object. They
    are used to access objects. These are created using defined constructors of the classes e.g.
    String, class, 

- Non primitive data types start with an uppercase while primitive start with lower case.

- To create a variable, you must specify the type and assign it a value.
    type variableName = value;
- You can also declare a variable without assigning a value. e.g. int myNum;
- If you assign a new value to an existing variable, it will overwrite the previous value.